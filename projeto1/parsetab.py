# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "programleftORleftANDleftEQUALSDIFFleftGTGETLTLETleftPLUSMINUSleftTIMESDIVIDEMODADDRESS AND ASSERT ASSIGN BREAK CCOMMENT CCONST CHAR COMMA CPPCOMMENT DASSIGN DIFF DIVIDE ELSE EQUALS ERROR FCONST FLOAT FOR GET GT ICONST ID IF INT LBRACE LBRACK LET LPAREN LT MINASSIGN MINUS MM MOD MODASSIGN NOT OR PASSIGN PLUS PP PRINT RBRACE RBRACK READ RETURN RPAREN SEMI STRING_LITERAL TASSIGN TIMES UNMATCHEDQUOTE UNTERMCOMMENT VOID WHILEempty :  program  : global_declaration_list\n         global_declaration_list : global_declaration\n                                    | global_declaration_list global_declaration\n        global_declaration : function_definition\n                              | declaration\n         function_definition : type_specifier declarator declaration_list_opt compound_statement  type_specifier : VOID\n                           | CHAR\n                           | INT\n                           | FLOAT\n         declarator : pointer direct_declarator\n                        | direct_declarator\n         pointer : TIMES pointer_opt\n        pointer_opt : pointer\n                      | empty\n         direct_declarator : identifier\n                              | LPAREN declarator RPAREN\n         direct_declarator : direct_declarator LBRACK constant_expression_opt RBRACK\n         direct_declarator : direct_declarator LPAREN parameter_list RPAREN\n                              | direct_declarator LPAREN identifier_list_opt RPAREN\n         constant_expression : expr  constant_expression_opt : constant_expression\n                                    | empty\n         identifier : ID  identifier_list : identifier_list identifier\n                            | identifier\n         identifier_list_opt : identifier_list\n                                | empty\n        \n        expr :  cast_expression\n                | expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE expr\n                | expr EQUALS expr\n                | expr MOD expr\n                | expr GT expr\n                | expr GET expr\n                | expr LT expr\n                | expr LET expr\n                | expr DIFF expr\n                | expr AND expr\n                | expr OR expr\n        \n        cast_expression : unary_expression\n                        | LPAREN type_specifier RPAREN cast_expression\n        \n        unary_expression : postfix_expression\n                         | unary_operator cast_expression\n        unary_expression : PP unary_expression  \n        unary_expression : MM unary_expression\n        \n        postfix_expression : primary_expression\n                           | postfix_expression LPAREN argument_expression RPAREN\n                           | postfix_expression LPAREN RPAREN\n\n        \n        postfix_expression : postfix_expression MM\n                           | postfix_expression PP\n        \n        postfix_expression : postfix_expression LBRACK expression RBRACK\n        \n        primary_expression : identifier\n        \n        primary_expression : constant\n        \n        primary_expression : STRING_LITERAL\n        \n        primary_expression : LPAREN expression RPAREN\n         constant : ICONST\n         constant : FCONST\n         expression : assignment_expression\n                       | assignment_expression COMMA expression\n         expression_opt : expression\n                           | empty\n        assignment_expression : expr\n                                 | unary_expression assignment_operator assignment_expression\n        argument_expression : assignment_expression\n                               | argument_expression COMMA assignment_expression\n         assignment_operator : ASSIGN\n                                | TASSIGN\n                                | DASSIGN\n                                | MODASSIGN\n                                | PASSIGN\n                                | MINASSIGN\n        unary_operator : ADDRESS\n                          | TIMES\n                          | PLUS\n                          | MINUS\n                          | NOT\n        parameter_list : parameter_declaration\n                          | parameter_list COMMA parameter_declaration\n         parameter_declaration : type_specifier declarator\n        declaration : type_specifier init_declarator_list SEMI\n         declaration_list : declaration\n                             | declaration_list declaration\n         declaration_list_opt : declaration_list\n                                | empty\n        init_declarator : declarator\n                           | declarator ASSIGN initializer\n         init_declarator_list : init_declarator\n                                 | init_declarator_list COMMA init_declarator\n        initializer : assignment_expression\n                       | LBRACE initializer_list RBRACE\n                       | LBRACE initializer_list COMMA RBRACE\n         initializer_list : initializer\n                             | initializer_list COMMA initializer\n        compound_statement : LBRACE declaration_list_opt statement_list_opt RBRACE\n        \n        statement : expression_statement\n                | compound_statement\n                | selection_statement\n                | iteration_statement\n                | jump_statement\n                | assert_statement\n                | print_statement\n                | read_statement\n        \n        expression_statement : expression_opt SEMI\n            selection_statement : IF LPAREN expression RPAREN statement\n                                    | IF LPAREN expression RPAREN statement ELSE statement\n            iteration_statement : WHILE LPAREN expression RPAREN statement\n                                    | FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement\n                                    | FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement\n        \n        jump_statement : BREAK SEMI\n        \n        jump_statement : RETURN expression_opt SEMI\n         assert_statement : ASSERT expr SEMI  print_statement : PRINT LPAREN expression_opt RPAREN SEMI\n        read_statement : READ LPAREN argument_expression RPAREN SEMI statement_list : statement_list statement\n                    | statement\n         statement_list_opt : statement_list\n                                | empty\n        "

_lr_action_items = {
    "VOID": (
        [
            0,
            2,
            3,
            4,
            5,
            11,
            12,
            15,
            18,
            20,
            24,
            26,
            27,
            29,
            31,
            37,
            38,
            52,
            61,
            75,
            110,
            111,
            112,
            113,
            162,
            168,
        ],
        [
            7,
            7,
            -3,
            -5,
            -6,
            -4,
            7,
            -13,
            -17,
            -25,
            7,
            -85,
            -84,
            -12,
            7,
            -7,
            7,
            7,
            -86,
            -18,
            -19,
            -20,
            7,
            -21,
            -98,
            7,
        ],
    ),
    "CHAR": (
        [
            0,
            2,
            3,
            4,
            5,
            11,
            12,
            15,
            18,
            20,
            24,
            26,
            27,
            29,
            31,
            37,
            38,
            52,
            61,
            75,
            110,
            111,
            112,
            113,
            162,
            168,
        ],
        [
            8,
            8,
            -3,
            -5,
            -6,
            -4,
            8,
            -13,
            -17,
            -25,
            8,
            -85,
            -84,
            -12,
            8,
            -7,
            8,
            8,
            -86,
            -18,
            -19,
            -20,
            8,
            -21,
            -98,
            8,
        ],
    ),
    "INT": (
        [
            0,
            2,
            3,
            4,
            5,
            11,
            12,
            15,
            18,
            20,
            24,
            26,
            27,
            29,
            31,
            37,
            38,
            52,
            61,
            75,
            110,
            111,
            112,
            113,
            162,
            168,
        ],
        [
            9,
            9,
            -3,
            -5,
            -6,
            -4,
            9,
            -13,
            -17,
            -25,
            9,
            -85,
            -84,
            -12,
            9,
            -7,
            9,
            9,
            -86,
            -18,
            -19,
            -20,
            9,
            -21,
            -98,
            9,
        ],
    ),
    "FLOAT": (
        [
            0,
            2,
            3,
            4,
            5,
            11,
            12,
            15,
            18,
            20,
            24,
            26,
            27,
            29,
            31,
            37,
            38,
            52,
            61,
            75,
            110,
            111,
            112,
            113,
            162,
            168,
        ],
        [
            10,
            10,
            -3,
            -5,
            -6,
            -4,
            10,
            -13,
            -17,
            -25,
            10,
            -85,
            -84,
            -12,
            10,
            -7,
            10,
            10,
            -86,
            -18,
            -19,
            -20,
            10,
            -21,
            -98,
            10,
        ],
    ),
    "$end": ([1, 2, 3, 4, 5, 11, 27, 37, 162,], [0, -2, -3, -5, -6, -4, -84, -7, -98,]),
    "TIMES": (
        [
            6,
            7,
            8,
            9,
            10,
            17,
            19,
            20,
            21,
            23,
            24,
            25,
            26,
            27,
            28,
            30,
            38,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            66,
            67,
            73,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            171,
            172,
            173,
            176,
            177,
            178,
            179,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            17,
            -8,
            -9,
            -10,
            -11,
            17,
            17,
            -25,
            17,
            47,
            -87,
            -88,
            -85,
            -84,
            17,
            47,
            -1,
            47,
            81,
            -44,
            -30,
            -78,
            -79,
            -77,
            -46,
            47,
            47,
            47,
            47,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            81,
            -44,
            17,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            47,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            47,
            -53,
            -54,
            47,
            -47,
            -48,
            47,
            -49,
            47,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            47,
            47,
            47,
            81,
            81,
            -33,
            -34,
            81,
            -36,
            81,
            81,
            81,
            81,
            81,
            81,
            81,
            -52,
            47,
            -59,
            47,
            -98,
            -118,
            -107,
            47,
            47,
            47,
            -113,
            81,
            47,
            47,
            -51,
            47,
            -55,
            -45,
            47,
            -114,
            -115,
            47,
            47,
            47,
            -108,
            -110,
            47,
            -116,
            -117,
            47,
            47,
            -109,
            47,
            47,
            -112,
            -111,
        ],
    ),
    "LPAREN": (
        [
            6,
            7,
            8,
            9,
            10,
            14,
            15,
            17,
            18,
            19,
            20,
            21,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            32,
            33,
            34,
            38,
            41,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            73,
            75,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            105,
            110,
            111,
            113,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            129,
            131,
            132,
            134,
            135,
            136,
            137,
            139,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            176,
            177,
            178,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            19,
            -8,
            -9,
            -10,
            -11,
            19,
            31,
            -1,
            -17,
            19,
            -25,
            19,
            52,
            -87,
            -88,
            -85,
            -84,
            19,
            31,
            52,
            -14,
            -15,
            -16,
            -1,
            52,
            -78,
            -79,
            -77,
            99,
            52,
            105,
            105,
            52,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            19,
            -18,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            52,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            52,
            -53,
            -54,
            52,
            52,
            -19,
            -20,
            -21,
            52,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            166,
            167,
            168,
            52,
            52,
            172,
            173,
            52,
            -52,
            52,
            -59,
            52,
            -98,
            -118,
            -107,
            52,
            52,
            52,
            -113,
            52,
            52,
            -51,
            52,
            -55,
            52,
            -114,
            -115,
            52,
            52,
            52,
            -108,
            -110,
            52,
            -116,
            -117,
            52,
            52,
            -109,
            52,
            52,
            -112,
            -111,
        ],
    ),
    "ID": (
        [
            6,
            7,
            8,
            9,
            10,
            14,
            17,
            19,
            20,
            21,
            23,
            24,
            25,
            26,
            27,
            28,
            30,
            31,
            32,
            33,
            34,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            71,
            73,
            74,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            114,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            20,
            -8,
            -9,
            -10,
            -11,
            20,
            -1,
            20,
            -25,
            20,
            20,
            -87,
            -88,
            -85,
            -84,
            20,
            20,
            20,
            -14,
            -15,
            -16,
            -1,
            20,
            -78,
            -79,
            -77,
            20,
            20,
            20,
            20,
            -76,
            -80,
            -86,
            20,
            20,
            -27,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            20,
            20,
            20,
            -26,
            20,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            20,
            20,
            20,
            20,
            20,
            -98,
            -118,
            -107,
            20,
            20,
            20,
            -113,
            20,
            20,
            20,
            20,
            -114,
            -115,
            20,
            20,
            20,
            -108,
            -110,
            20,
            -116,
            -117,
            20,
            20,
            -109,
            20,
            20,
            -112,
            -111,
        ],
    ),
    "RPAREN": (
        [
            7,
            8,
            9,
            10,
            15,
            18,
            20,
            29,
            31,
            35,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            68,
            69,
            70,
            71,
            72,
            74,
            75,
            99,
            100,
            101,
            103,
            104,
            106,
            107,
            108,
            109,
            110,
            111,
            113,
            114,
            115,
            130,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            159,
            161,
            164,
            172,
            176,
            178,
            179,
            180,
            181,
            182,
            187,
            188,
            189,
            199,
            203,
            204,
            206,
        ],
        [
            -8,
            -9,
            -10,
            -11,
            -13,
            -17,
            -25,
            -12,
            -1,
            75,
            -66,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            111,
            113,
            -81,
            -28,
            -29,
            -27,
            -18,
            155,
            -53,
            -54,
            -47,
            -48,
            -49,
            158,
            159,
            -62,
            -19,
            -20,
            -21,
            -26,
            -83,
            -64,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -67,
            176,
            -52,
            -68,
            -59,
            -82,
            -65,
            -1,
            -51,
            -55,
            -45,
            -63,
            190,
            191,
            194,
            195,
            -69,
            -1,
            -1,
            207,
            208,
        ],
    ),
    "SEMI": (
        [
            12,
            13,
            15,
            16,
            18,
            20,
            24,
            25,
            26,
            27,
            29,
            36,
            38,
            39,
            40,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            61,
            62,
            67,
            75,
            76,
            100,
            101,
            103,
            104,
            106,
            109,
            110,
            111,
            113,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            130,
            133,
            134,
            138,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            155,
            159,
            162,
            163,
            164,
            165,
            168,
            169,
            170,
            171,
            174,
            176,
            178,
            179,
            180,
            183,
            184,
            185,
            186,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -89,
            27,
            -13,
            -91,
            -17,
            -25,
            -87,
            -88,
            -85,
            -84,
            -12,
            -89,
            -1,
            -90,
            -93,
            -66,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            -92,
            -44,
            -18,
            -1,
            -53,
            -54,
            -47,
            -48,
            -49,
            -62,
            -19,
            -20,
            -21,
            -1,
            -65,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            165,
            -64,
            169,
            -1,
            -94,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -67,
            -52,
            -59,
            -98,
            -118,
            -65,
            -107,
            -1,
            -113,
            185,
            186,
            -95,
            -51,
            -55,
            -45,
            -63,
            192,
            -1,
            -114,
            -115,
            -1,
            -1,
            -1,
            199,
            200,
            201,
            -108,
            -110,
            203,
            -116,
            -117,
            -1,
            -109,
            -1,
            -1,
            -112,
            -111,
        ],
    ),
    "COMMA": (
        [
            12,
            13,
            15,
            16,
            18,
            20,
            29,
            36,
            39,
            40,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            62,
            67,
            68,
            70,
            75,
            77,
            78,
            100,
            101,
            103,
            104,
            106,
            109,
            110,
            111,
            113,
            115,
            138,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            159,
            161,
            174,
            175,
            176,
            178,
            179,
            188,
            189,
        ],
        [
            -89,
            28,
            -13,
            -91,
            -17,
            -25,
            -12,
            -89,
            -90,
            -93,
            -66,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -92,
            -44,
            112,
            -81,
            -18,
            139,
            -96,
            -53,
            -54,
            -47,
            -48,
            -49,
            160,
            -19,
            -20,
            -21,
            -83,
            -94,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -67,
            177,
            -52,
            -68,
            -59,
            -82,
            -95,
            -97,
            -51,
            -55,
            -45,
            177,
            -69,
        ],
    ),
    "ASSIGN": (
        [
            12,
            15,
            18,
            20,
            29,
            36,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            75,
            100,
            101,
            103,
            104,
            106,
            110,
            111,
            113,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            23,
            -13,
            -17,
            -25,
            -12,
            23,
            93,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -18,
            -53,
            -54,
            -47,
            -48,
            -49,
            -19,
            -20,
            -21,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "LBRACE": (
        [
            12,
            15,
            18,
            20,
            22,
            23,
            24,
            25,
            26,
            27,
            29,
            38,
            41,
            61,
            75,
            76,
            110,
            111,
            113,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            139,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -1,
            -13,
            -17,
            -25,
            38,
            41,
            -87,
            -88,
            -85,
            -84,
            -12,
            -1,
            41,
            -86,
            -18,
            38,
            -19,
            -20,
            -21,
            38,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            41,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            38,
            38,
            -108,
            -110,
            -116,
            -117,
            38,
            -109,
            38,
            38,
            -112,
            -111,
        ],
    ),
    "LBRACK": (
        [
            15,
            18,
            20,
            29,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            75,
            100,
            101,
            110,
            111,
            113,
            155,
            159,
            176,
            178,
        ],
        [
            30,
            -17,
            -25,
            30,
            102,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -18,
            -53,
            -54,
            -19,
            -20,
            -21,
            -52,
            -59,
            -51,
            -55,
        ],
    ),
    "MM": (
        [
            20,
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            176,
            177,
            178,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -25,
            51,
            -87,
            -88,
            -85,
            -84,
            51,
            -1,
            51,
            -78,
            -79,
            -77,
            100,
            51,
            51,
            51,
            51,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            51,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            51,
            -53,
            -54,
            51,
            51,
            51,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            51,
            51,
            51,
            -52,
            51,
            -59,
            51,
            -98,
            -118,
            -107,
            51,
            51,
            51,
            -113,
            51,
            51,
            -51,
            51,
            -55,
            51,
            -114,
            -115,
            51,
            51,
            51,
            -108,
            -110,
            51,
            -116,
            -117,
            51,
            51,
            -109,
            51,
            51,
            -112,
            -111,
        ],
    ),
    "PP": (
        [
            20,
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            176,
            177,
            178,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -25,
            50,
            -87,
            -88,
            -85,
            -84,
            50,
            -1,
            50,
            -78,
            -79,
            -77,
            101,
            50,
            50,
            50,
            50,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            50,
            -53,
            -54,
            50,
            50,
            50,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            50,
            50,
            50,
            -52,
            50,
            -59,
            50,
            -98,
            -118,
            -107,
            50,
            50,
            50,
            -113,
            50,
            50,
            -51,
            50,
            -55,
            50,
            -114,
            -115,
            50,
            50,
            50,
            -108,
            -110,
            50,
            -116,
            -117,
            50,
            50,
            -109,
            50,
            50,
            -112,
            -111,
        ],
    ),
    "TASSIGN": (
        [
            20,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            100,
            101,
            103,
            104,
            106,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            -25,
            94,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "DASSIGN": (
        [
            20,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            100,
            101,
            103,
            104,
            106,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            -25,
            95,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "MODASSIGN": (
        [
            20,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            100,
            101,
            103,
            104,
            106,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            -25,
            96,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "PASSIGN": (
        [
            20,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            100,
            101,
            103,
            104,
            106,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            -25,
            97,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "MINASSIGN": (
        [
            20,
            43,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            67,
            100,
            101,
            103,
            104,
            106,
            155,
            159,
            176,
            178,
            179,
        ],
        [
            -25,
            98,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -52,
            -59,
            -51,
            -55,
            -45,
        ],
    ),
    "PLUS": (
        [
            20,
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            66,
            67,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            171,
            172,
            173,
            176,
            177,
            178,
            179,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -25,
            45,
            -87,
            -88,
            -85,
            -84,
            45,
            -1,
            45,
            79,
            -44,
            -30,
            -78,
            -79,
            -77,
            -46,
            45,
            45,
            45,
            45,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            79,
            -44,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            45,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            45,
            -53,
            -54,
            45,
            -47,
            -48,
            45,
            -49,
            45,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            45,
            45,
            45,
            -31,
            -32,
            -33,
            -34,
            79,
            -36,
            79,
            79,
            79,
            79,
            79,
            79,
            79,
            -52,
            45,
            -59,
            45,
            -98,
            -118,
            -107,
            45,
            45,
            45,
            -113,
            79,
            45,
            45,
            -51,
            45,
            -55,
            -45,
            45,
            -114,
            -115,
            45,
            45,
            45,
            -108,
            -110,
            45,
            -116,
            -117,
            45,
            45,
            -109,
            45,
            45,
            -112,
            -111,
        ],
    ),
    "MINUS": (
        [
            20,
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            56,
            57,
            58,
            59,
            60,
            61,
            66,
            67,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            158,
            159,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            171,
            172,
            173,
            176,
            177,
            178,
            179,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -25,
            46,
            -87,
            -88,
            -85,
            -84,
            46,
            -1,
            46,
            80,
            -44,
            -30,
            -78,
            -79,
            -77,
            -46,
            46,
            46,
            46,
            46,
            -50,
            -76,
            -80,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            80,
            -44,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            46,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            46,
            -53,
            -54,
            46,
            -47,
            -48,
            46,
            -49,
            46,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            46,
            46,
            46,
            -31,
            -32,
            -33,
            -34,
            80,
            -36,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            -52,
            46,
            -59,
            46,
            -98,
            -118,
            -107,
            46,
            46,
            46,
            -113,
            80,
            46,
            46,
            -51,
            46,
            -55,
            -45,
            46,
            -114,
            -115,
            46,
            46,
            46,
            -108,
            -110,
            46,
            -116,
            -117,
            46,
            46,
            -109,
            46,
            46,
            -112,
            -111,
        ],
    ),
    "DIVIDE": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            82,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            82,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            82,
            82,
            -33,
            -34,
            82,
            -36,
            82,
            82,
            82,
            82,
            82,
            82,
            82,
            -52,
            -59,
            82,
            -51,
            -55,
            -45,
        ],
    ),
    "EQUALS": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            83,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            83,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            83,
            83,
            -52,
            -59,
            83,
            -51,
            -55,
            -45,
        ],
    ),
    "MOD": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            84,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            84,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            84,
            84,
            -33,
            -34,
            84,
            -36,
            84,
            84,
            84,
            84,
            84,
            84,
            84,
            -52,
            -59,
            84,
            -51,
            -55,
            -45,
        ],
    ),
    "GT": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            85,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            85,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            85,
            -36,
            -37,
            -38,
            -39,
            -40,
            85,
            85,
            85,
            -52,
            -59,
            85,
            -51,
            -55,
            -45,
        ],
    ),
    "GET": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            86,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            86,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            86,
            -36,
            -37,
            -38,
            -39,
            -40,
            86,
            86,
            86,
            -52,
            -59,
            86,
            -51,
            -55,
            -45,
        ],
    ),
    "LT": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            87,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            87,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            87,
            -36,
            -37,
            -38,
            -39,
            -40,
            87,
            87,
            87,
            -52,
            -59,
            87,
            -51,
            -55,
            -45,
        ],
    ),
    "LET": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            88,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            88,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            88,
            -36,
            -37,
            -38,
            -39,
            -40,
            88,
            88,
            88,
            -52,
            -59,
            88,
            -51,
            -55,
            -45,
        ],
    ),
    "DIFF": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            89,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            89,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            89,
            89,
            -52,
            -59,
            89,
            -51,
            -55,
            -45,
        ],
    ),
    "AND": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            90,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            90,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            90,
            -52,
            -59,
            90,
            -51,
            -55,
            -45,
        ],
    ),
    "OR": (
        [
            20,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            155,
            159,
            171,
            176,
            178,
            179,
        ],
        [
            -25,
            91,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            91,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -52,
            -59,
            91,
            -51,
            -55,
            -45,
        ],
    ),
    "RBRACK": (
        [
            20,
            30,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            63,
            64,
            65,
            66,
            67,
            100,
            101,
            103,
            104,
            106,
            109,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            155,
            157,
            159,
            176,
            178,
            179,
            180,
        ],
        [
            -25,
            -1,
            -66,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            110,
            -23,
            -24,
            -22,
            -44,
            -53,
            -54,
            -47,
            -48,
            -49,
            -62,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -67,
            -52,
            178,
            -59,
            -51,
            -55,
            -45,
            -63,
        ],
    ),
    "RBRACE": (
        [
            20,
            24,
            25,
            26,
            27,
            38,
            40,
            42,
            43,
            44,
            48,
            53,
            56,
            57,
            58,
            59,
            60,
            61,
            67,
            76,
            77,
            78,
            100,
            101,
            103,
            104,
            106,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            155,
            159,
            162,
            163,
            165,
            169,
            174,
            175,
            176,
            178,
            179,
            185,
            186,
            196,
            197,
            200,
            201,
            205,
            209,
            210,
        ],
        [
            -25,
            -87,
            -88,
            -85,
            -84,
            -1,
            -93,
            -66,
            -44,
            -30,
            -46,
            -50,
            -56,
            -57,
            -58,
            -60,
            -61,
            -86,
            -44,
            -1,
            138,
            -96,
            -53,
            -54,
            -47,
            -48,
            -49,
            162,
            -120,
            -121,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -94,
            174,
            -31,
            -32,
            -33,
            -34,
            -35,
            -36,
            -37,
            -38,
            -39,
            -40,
            -41,
            -42,
            -43,
            -67,
            -52,
            -59,
            -98,
            -118,
            -107,
            -113,
            -95,
            -97,
            -51,
            -55,
            -45,
            -114,
            -115,
            -108,
            -110,
            -116,
            -117,
            -109,
            -112,
            -111,
        ],
    ),
    "ADDRESS": (
        [
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            54,
            -87,
            -88,
            -85,
            -84,
            54,
            -1,
            54,
            -78,
            -79,
            -77,
            54,
            54,
            54,
            54,
            -76,
            -80,
            -86,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            54,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            54,
            54,
            54,
            54,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            54,
            54,
            54,
            54,
            54,
            -98,
            -118,
            -107,
            54,
            54,
            54,
            -113,
            54,
            54,
            54,
            54,
            -114,
            -115,
            54,
            54,
            54,
            -108,
            -110,
            54,
            -116,
            -117,
            54,
            54,
            -109,
            54,
            54,
            -112,
            -111,
        ],
    ),
    "NOT": (
        [
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            55,
            -87,
            -88,
            -85,
            -84,
            55,
            -1,
            55,
            -78,
            -79,
            -77,
            55,
            55,
            55,
            55,
            -76,
            -80,
            -86,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            55,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            55,
            55,
            55,
            55,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            55,
            55,
            55,
            55,
            55,
            -98,
            -118,
            -107,
            55,
            55,
            55,
            -113,
            55,
            55,
            55,
            55,
            -114,
            -115,
            55,
            55,
            55,
            -108,
            -110,
            55,
            -116,
            -117,
            55,
            55,
            -109,
            55,
            55,
            -112,
            -111,
        ],
    ),
    "STRING_LITERAL": (
        [
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            58,
            -87,
            -88,
            -85,
            -84,
            58,
            -1,
            58,
            -78,
            -79,
            -77,
            58,
            58,
            58,
            58,
            -76,
            -80,
            -86,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            58,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            58,
            58,
            58,
            58,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            58,
            58,
            58,
            58,
            58,
            -98,
            -118,
            -107,
            58,
            58,
            58,
            -113,
            58,
            58,
            58,
            58,
            -114,
            -115,
            58,
            58,
            58,
            -108,
            -110,
            58,
            -116,
            -117,
            58,
            58,
            -109,
            58,
            58,
            -112,
            -111,
        ],
    ),
    "ICONST": (
        [
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            59,
            -87,
            -88,
            -85,
            -84,
            59,
            -1,
            59,
            -78,
            -79,
            -77,
            59,
            59,
            59,
            59,
            -76,
            -80,
            -86,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            59,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            59,
            59,
            59,
            59,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            59,
            59,
            59,
            59,
            59,
            -98,
            -118,
            -107,
            59,
            59,
            59,
            -113,
            59,
            59,
            59,
            59,
            -114,
            -115,
            59,
            59,
            59,
            -108,
            -110,
            59,
            -116,
            -117,
            59,
            59,
            -109,
            59,
            59,
            -112,
            -111,
        ],
    ),
    "FCONST": (
        [
            23,
            24,
            25,
            26,
            27,
            30,
            38,
            41,
            45,
            46,
            47,
            49,
            50,
            51,
            52,
            54,
            55,
            61,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            93,
            94,
            95,
            96,
            97,
            98,
            99,
            102,
            105,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            134,
            135,
            139,
            158,
            160,
            162,
            163,
            165,
            166,
            167,
            168,
            169,
            172,
            173,
            177,
            184,
            185,
            186,
            190,
            191,
            192,
            196,
            197,
            199,
            200,
            201,
            202,
            203,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            60,
            -87,
            -88,
            -85,
            -84,
            60,
            -1,
            60,
            -78,
            -79,
            -77,
            60,
            60,
            60,
            60,
            -76,
            -80,
            -86,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            60,
            -70,
            -71,
            -72,
            -73,
            -74,
            -75,
            60,
            60,
            60,
            60,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            60,
            60,
            60,
            60,
            60,
            -98,
            -118,
            -107,
            60,
            60,
            60,
            -113,
            60,
            60,
            60,
            60,
            -114,
            -115,
            60,
            60,
            60,
            -108,
            -110,
            60,
            -116,
            -117,
            60,
            60,
            -109,
            60,
            60,
            -112,
            -111,
        ],
    ),
    "IF": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            129,
            129,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            129,
            129,
            -108,
            -110,
            -116,
            -117,
            129,
            -109,
            129,
            129,
            -112,
            -111,
        ],
    ),
    "WHILE": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            131,
            131,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            131,
            131,
            -108,
            -110,
            -116,
            -117,
            131,
            -109,
            131,
            131,
            -112,
            -111,
        ],
    ),
    "FOR": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            132,
            132,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            132,
            132,
            -108,
            -110,
            -116,
            -117,
            132,
            -109,
            132,
            132,
            -112,
            -111,
        ],
    ),
    "BREAK": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            133,
            133,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            133,
            133,
            -108,
            -110,
            -116,
            -117,
            133,
            -109,
            133,
            133,
            -112,
            -111,
        ],
    ),
    "RETURN": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            134,
            134,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            134,
            134,
            -108,
            -110,
            -116,
            -117,
            134,
            -109,
            134,
            134,
            -112,
            -111,
        ],
    ),
    "ASSERT": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            135,
            135,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            135,
            135,
            -108,
            -110,
            -116,
            -117,
            135,
            -109,
            135,
            135,
            -112,
            -111,
        ],
    ),
    "PRINT": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            136,
            136,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            136,
            136,
            -108,
            -110,
            -116,
            -117,
            136,
            -109,
            136,
            136,
            -112,
            -111,
        ],
    ),
    "READ": (
        [
            24,
            25,
            26,
            27,
            38,
            61,
            76,
            117,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            163,
            165,
            169,
            185,
            186,
            190,
            191,
            196,
            197,
            200,
            201,
            202,
            205,
            207,
            208,
            209,
            210,
        ],
        [
            -87,
            -88,
            -85,
            -84,
            -1,
            -86,
            137,
            137,
            -119,
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -118,
            -107,
            -113,
            -114,
            -115,
            137,
            137,
            -108,
            -110,
            -116,
            -117,
            137,
            -109,
            137,
            137,
            -112,
            -111,
        ],
    ),
    "ELSE": (
        [
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            162,
            165,
            169,
            185,
            186,
            196,
            197,
            200,
            201,
            205,
            209,
            210,
        ],
        [
            -99,
            -100,
            -101,
            -102,
            -103,
            -104,
            -105,
            -106,
            -98,
            -107,
            -113,
            -114,
            -115,
            202,
            -110,
            -116,
            -117,
            -109,
            -112,
            -111,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": ([0,], [1,]),
    "global_declaration_list": ([0,], [2,]),
    "global_declaration": ([0, 2,], [3, 11,]),
    "function_definition": ([0, 2,], [4, 4,]),
    "declaration": ([0, 2, 12, 24, 38, 168,], [5, 5, 26, 61, 26, 184,]),
    "type_specifier": (
        [0, 2, 12, 24, 31, 38, 52, 112, 168,],
        [6, 6, 21, 21, 73, 21, 107, 73, 21,],
    ),
    "declarator": ([6, 19, 21, 28, 73,], [12, 35, 36, 36, 115,]),
    "init_declarator_list": ([6, 21,], [13, 13,]),
    "pointer": ([6, 17, 19, 21, 28, 73,], [14, 33, 14, 14, 14, 14,]),
    "direct_declarator": ([6, 14, 19, 21, 28, 73,], [15, 29, 15, 15, 15, 15,]),
    "init_declarator": ([6, 21, 28,], [16, 16, 62,]),
    "identifier": (
        [
            6,
            14,
            19,
            21,
            23,
            28,
            30,
            31,
            41,
            49,
            50,
            51,
            52,
            71,
            73,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            18,
            18,
            18,
            18,
            56,
            18,
            56,
            74,
            56,
            56,
            56,
            56,
            56,
            114,
            18,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
            56,
        ],
    ),
    "declaration_list_opt": ([12, 38,], [22, 76,]),
    "declaration_list": ([12, 38,], [24, 24,]),
    "empty": (
        [
            12,
            17,
            30,
            31,
            38,
            76,
            117,
            134,
            168,
            172,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            25,
            34,
            65,
            72,
            25,
            118,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
            164,
        ],
    ),
    "pointer_opt": ([17,], [32,]),
    "compound_statement": (
        [22, 76, 117, 190, 191, 202, 207, 208,],
        [37, 121, 121, 121, 121, 121, 121, 121,],
    ),
    "initializer": ([23, 41, 139,], [39, 78, 175,]),
    "assignment_expression": (
        [
            23,
            41,
            52,
            76,
            92,
            99,
            102,
            105,
            117,
            134,
            139,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            40,
            40,
            109,
            109,
            153,
            156,
            109,
            109,
            109,
            109,
            40,
            109,
            109,
            109,
            109,
            109,
            156,
            189,
            109,
            109,
            109,
            109,
            109,
            109,
            109,
            109,
            109,
        ],
    ),
    "expr": (
        [
            23,
            30,
            41,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            42,
            66,
            42,
            42,
            42,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            42,
            42,
            42,
            42,
            42,
            42,
            171,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
            42,
        ],
    ),
    "unary_expression": (
        [
            23,
            30,
            41,
            49,
            50,
            51,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            43,
            67,
            43,
            67,
            104,
            106,
            43,
            43,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            67,
            43,
            43,
            43,
            43,
            43,
            43,
            67,
            43,
            67,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
            43,
        ],
    ),
    "cast_expression": (
        [
            23,
            30,
            41,
            49,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            44,
            44,
            44,
            103,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            179,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
            44,
        ],
    ),
    "postfix_expression": (
        [
            23,
            30,
            41,
            49,
            50,
            51,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
            48,
        ],
    ),
    "unary_operator": (
        [
            23,
            30,
            41,
            49,
            50,
            51,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
            49,
        ],
    ),
    "primary_expression": (
        [
            23,
            30,
            41,
            49,
            50,
            51,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
            53,
        ],
    ),
    "constant": (
        [
            23,
            30,
            41,
            49,
            50,
            51,
            52,
            76,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            90,
            91,
            92,
            99,
            102,
            105,
            117,
            134,
            135,
            139,
            158,
            160,
            166,
            167,
            168,
            172,
            173,
            177,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
            57,
        ],
    ),
    "constant_expression_opt": ([30,], [63,]),
    "constant_expression": ([30,], [64,]),
    "parameter_list": ([31,], [68,]),
    "identifier_list_opt": ([31,], [69,]),
    "parameter_declaration": ([31, 112,], [70, 161,]),
    "identifier_list": ([31,], [71,]),
    "initializer_list": ([41,], [77,]),
    "assignment_operator": ([43,], [92,]),
    "expression": (
        [
            52,
            76,
            102,
            105,
            117,
            134,
            160,
            166,
            167,
            168,
            172,
            184,
            190,
            191,
            192,
            199,
            202,
            203,
            207,
            208,
        ],
        [
            108,
            130,
            157,
            108,
            130,
            130,
            180,
            181,
            182,
            130,
            130,
            130,
            130,
            130,
            130,
            130,
            130,
            130,
            130,
            130,
        ],
    ),
    "statement_list_opt": ([76,], [116,]),
    "statement_list": ([76,], [117,]),
    "statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [119, 163, 196, 197, 205, 209, 210,],
    ),
    "expression_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [120, 120, 120, 120, 120, 120, 120,],
    ),
    "selection_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [122, 122, 122, 122, 122, 122, 122,],
    ),
    "iteration_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [123, 123, 123, 123, 123, 123, 123,],
    ),
    "jump_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [124, 124, 124, 124, 124, 124, 124,],
    ),
    "assert_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [125, 125, 125, 125, 125, 125, 125,],
    ),
    "print_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [126, 126, 126, 126, 126, 126, 126,],
    ),
    "read_statement": (
        [76, 117, 190, 191, 202, 207, 208,],
        [127, 127, 127, 127, 127, 127, 127,],
    ),
    "expression_opt": (
        [76, 117, 134, 168, 172, 184, 190, 191, 192, 199, 202, 203, 207, 208,],
        [128, 128, 170, 183, 187, 193, 128, 128, 198, 204, 128, 206, 128, 128,],
    ),
    "argument_expression": ([99, 173,], [154, 188,]),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    ("empty -> <empty>", "empty", 0, "p_empty", "parser.py", 26),
    ("program -> global_declaration_list", "program", 1, "p_program", "parser.py", 30),
    (
        "global_declaration_list -> global_declaration",
        "global_declaration_list",
        1,
        "p_global_declaration_list",
        "parser.py",
        35,
    ),
    (
        "global_declaration_list -> global_declaration_list global_declaration",
        "global_declaration_list",
        2,
        "p_global_declaration_list",
        "parser.py",
        36,
    ),
    (
        "global_declaration -> function_definition",
        "global_declaration",
        1,
        "p_global_declaration",
        "parser.py",
        41,
    ),
    (
        "global_declaration -> declaration",
        "global_declaration",
        1,
        "p_global_declaration",
        "parser.py",
        42,
    ),
    (
        "function_definition -> type_specifier declarator declaration_list_opt compound_statement",
        "function_definition",
        4,
        "p_function_definition",
        "parser.py",
        47,
    ),
    (
        "type_specifier -> VOID",
        "type_specifier",
        1,
        "p_type_specifier",
        "parser.py",
        51,
    ),
    (
        "type_specifier -> CHAR",
        "type_specifier",
        1,
        "p_type_specifier",
        "parser.py",
        52,
    ),
    ("type_specifier -> INT", "type_specifier", 1, "p_type_specifier", "parser.py", 53),
    (
        "type_specifier -> FLOAT",
        "type_specifier",
        1,
        "p_type_specifier",
        "parser.py",
        54,
    ),
    (
        "declarator -> pointer direct_declarator",
        "declarator",
        2,
        "p_declarator",
        "parser.py",
        59,
    ),
    (
        "declarator -> direct_declarator",
        "declarator",
        1,
        "p_declarator",
        "parser.py",
        60,
    ),
    ("pointer -> TIMES pointer_opt", "pointer", 2, "p_pointer", "parser.py", 69),
    ("pointer_opt -> pointer", "pointer_opt", 1, "p_pointer_opt", "parser.py", 74),
    ("pointer_opt -> empty", "pointer_opt", 1, "p_pointer_opt", "parser.py", 75),
    (
        "direct_declarator -> identifier",
        "direct_declarator",
        1,
        "p_direct_declarator_1",
        "parser.py",
        80,
    ),
    (
        "direct_declarator -> LPAREN declarator RPAREN",
        "direct_declarator",
        3,
        "p_direct_declarator_1",
        "parser.py",
        81,
    ),
    (
        "direct_declarator -> direct_declarator LBRACK constant_expression_opt RBRACK",
        "direct_declarator",
        4,
        "p_direct_declarator_2",
        "parser.py",
        89,
    ),
    (
        "direct_declarator -> direct_declarator LPAREN parameter_list RPAREN",
        "direct_declarator",
        4,
        "p_direct_declarator_3",
        "parser.py",
        94,
    ),
    (
        "direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN",
        "direct_declarator",
        4,
        "p_direct_declarator_3",
        "parser.py",
        95,
    ),
    (
        "constant_expression -> expr",
        "constant_expression",
        1,
        "p_constant_expression",
        "parser.py",
        100,
    ),
    (
        "constant_expression_opt -> constant_expression",
        "constant_expression_opt",
        1,
        "p_constant_expression_opt",
        "parser.py",
        104,
    ),
    (
        "constant_expression_opt -> empty",
        "constant_expression_opt",
        1,
        "p_constant_expression_opt",
        "parser.py",
        105,
    ),
    ("identifier -> ID", "identifier", 1, "p_identifier", "parser.py", 110),
    (
        "identifier_list -> identifier_list identifier",
        "identifier_list",
        2,
        "p_identifier_list",
        "parser.py",
        114,
    ),
    (
        "identifier_list -> identifier",
        "identifier_list",
        1,
        "p_identifier_list",
        "parser.py",
        115,
    ),
    (
        "identifier_list_opt -> identifier_list",
        "identifier_list_opt",
        1,
        "p_identifier_list_opt",
        "parser.py",
        120,
    ),
    (
        "identifier_list_opt -> empty",
        "identifier_list_opt",
        1,
        "p_identifier_list_opt",
        "parser.py",
        121,
    ),
    ("expr -> cast_expression", "expr", 1, "p_expr", "parser.py", 127),
    ("expr -> expr PLUS expr", "expr", 3, "p_expr", "parser.py", 128),
    ("expr -> expr MINUS expr", "expr", 3, "p_expr", "parser.py", 129),
    ("expr -> expr TIMES expr", "expr", 3, "p_expr", "parser.py", 130),
    ("expr -> expr DIVIDE expr", "expr", 3, "p_expr", "parser.py", 131),
    ("expr -> expr EQUALS expr", "expr", 3, "p_expr", "parser.py", 132),
    ("expr -> expr MOD expr", "expr", 3, "p_expr", "parser.py", 133),
    ("expr -> expr GT expr", "expr", 3, "p_expr", "parser.py", 134),
    ("expr -> expr GET expr", "expr", 3, "p_expr", "parser.py", 135),
    ("expr -> expr LT expr", "expr", 3, "p_expr", "parser.py", 136),
    ("expr -> expr LET expr", "expr", 3, "p_expr", "parser.py", 137),
    ("expr -> expr DIFF expr", "expr", 3, "p_expr", "parser.py", 138),
    ("expr -> expr AND expr", "expr", 3, "p_expr", "parser.py", 139),
    ("expr -> expr OR expr", "expr", 3, "p_expr", "parser.py", 140),
    (
        "cast_expression -> unary_expression",
        "cast_expression",
        1,
        "p_cast_expression",
        "parser.py",
        150,
    ),
    (
        "cast_expression -> LPAREN type_specifier RPAREN cast_expression",
        "cast_expression",
        4,
        "p_cast_expression",
        "parser.py",
        151,
    ),
    (
        "unary_expression -> postfix_expression",
        "unary_expression",
        1,
        "p_unary_expression_1",
        "parser.py",
        161,
    ),
    (
        "unary_expression -> unary_operator cast_expression",
        "unary_expression",
        2,
        "p_unary_expression_1",
        "parser.py",
        162,
    ),
    (
        "unary_expression -> PP unary_expression",
        "unary_expression",
        2,
        "p_unary_expression_2",
        "parser.py",
        170,
    ),
    (
        "unary_expression -> MM unary_expression",
        "unary_expression",
        2,
        "p_unary_expression_3",
        "parser.py",
        175,
    ),
    (
        "postfix_expression -> primary_expression",
        "postfix_expression",
        1,
        "p_postfix_expression_1",
        "parser.py",
        181,
    ),
    (
        "postfix_expression -> postfix_expression LPAREN argument_expression RPAREN",
        "postfix_expression",
        4,
        "p_postfix_expression_1",
        "parser.py",
        182,
    ),
    (
        "postfix_expression -> postfix_expression LPAREN RPAREN",
        "postfix_expression",
        3,
        "p_postfix_expression_1",
        "parser.py",
        183,
    ),
    (
        "postfix_expression -> postfix_expression MM",
        "postfix_expression",
        2,
        "p_postfix_expression_2",
        "parser.py",
        195,
    ),
    (
        "postfix_expression -> postfix_expression PP",
        "postfix_expression",
        2,
        "p_postfix_expression_2",
        "parser.py",
        196,
    ),
    (
        "postfix_expression -> postfix_expression LBRACK expression RBRACK",
        "postfix_expression",
        4,
        "p_postfix_expression_3",
        "parser.py",
        202,
    ),
    (
        "primary_expression -> identifier",
        "primary_expression",
        1,
        "p_primary_expression_1",
        "parser.py",
        208,
    ),
    (
        "primary_expression -> constant",
        "primary_expression",
        1,
        "p_primary_expression_2",
        "parser.py",
        214,
    ),
    (
        "primary_expression -> STRING_LITERAL",
        "primary_expression",
        1,
        "p_primary_expression_3",
        "parser.py",
        220,
    ),
    (
        "primary_expression -> LPAREN expression RPAREN",
        "primary_expression",
        3,
        "p_primary_expression_4",
        "parser.py",
        226,
    ),
    ("constant -> ICONST", "constant", 1, "p_constant_1", "parser.py", 231),
    ("constant -> FCONST", "constant", 1, "p_constant_2", "parser.py", 236),
    (
        "expression -> assignment_expression",
        "expression",
        1,
        "p_expression",
        "parser.py",
        241,
    ),
    (
        "expression -> assignment_expression COMMA expression",
        "expression",
        3,
        "p_expression",
        "parser.py",
        242,
    ),
    (
        "expression_opt -> expression",
        "expression_opt",
        1,
        "p_expression_opt",
        "parser.py",
        256,
    ),
    (
        "expression_opt -> empty",
        "expression_opt",
        1,
        "p_expression_opt",
        "parser.py",
        257,
    ),
    (
        "assignment_expression -> expr",
        "assignment_expression",
        1,
        "p_assignment_expression",
        "parser.py",
        262,
    ),
    (
        "assignment_expression -> unary_expression assignment_operator assignment_expression",
        "assignment_expression",
        3,
        "p_assignment_expression",
        "parser.py",
        263,
    ),
    (
        "argument_expression -> assignment_expression",
        "argument_expression",
        1,
        "p_argument_expression",
        "parser.py",
        272,
    ),
    (
        "argument_expression -> argument_expression COMMA assignment_expression",
        "argument_expression",
        3,
        "p_argument_expression",
        "parser.py",
        273,
    ),
    (
        "assignment_operator -> ASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        287,
    ),
    (
        "assignment_operator -> TASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        288,
    ),
    (
        "assignment_operator -> DASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        289,
    ),
    (
        "assignment_operator -> MODASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        290,
    ),
    (
        "assignment_operator -> PASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        291,
    ),
    (
        "assignment_operator -> MINASSIGN",
        "assignment_operator",
        1,
        "p_assignment_operator",
        "parser.py",
        292,
    ),
    (
        "unary_operator -> ADDRESS",
        "unary_operator",
        1,
        "p_unary_operator",
        "parser.py",
        297,
    ),
    (
        "unary_operator -> TIMES",
        "unary_operator",
        1,
        "p_unary_operator",
        "parser.py",
        298,
    ),
    (
        "unary_operator -> PLUS",
        "unary_operator",
        1,
        "p_unary_operator",
        "parser.py",
        299,
    ),
    (
        "unary_operator -> MINUS",
        "unary_operator",
        1,
        "p_unary_operator",
        "parser.py",
        300,
    ),
    (
        "unary_operator -> NOT",
        "unary_operator",
        1,
        "p_unary_operator",
        "parser.py",
        301,
    ),
    (
        "parameter_list -> parameter_declaration",
        "parameter_list",
        1,
        "p_parameter_list",
        "parser.py",
        306,
    ),
    (
        "parameter_list -> parameter_list COMMA parameter_declaration",
        "parameter_list",
        3,
        "p_parameter_list",
        "parser.py",
        307,
    ),
    (
        "parameter_declaration -> type_specifier declarator",
        "parameter_declaration",
        2,
        "p_parameter_declaration",
        "parser.py",
        316,
    ),
    (
        "declaration -> type_specifier init_declarator_list SEMI",
        "declaration",
        3,
        "p_declaration",
        "parser.py",
        321,
    ),
    (
        "declaration_list -> declaration",
        "declaration_list",
        1,
        "p_declaration_list",
        "parser.py",
        326,
    ),
    (
        "declaration_list -> declaration_list declaration",
        "declaration_list",
        2,
        "p_declaration_list",
        "parser.py",
        327,
    ),
    (
        "declaration_list_opt -> declaration_list",
        "declaration_list_opt",
        1,
        "p_declaration_list_opt",
        "parser.py",
        332,
    ),
    (
        "declaration_list_opt -> empty",
        "declaration_list_opt",
        1,
        "p_declaration_list_opt",
        "parser.py",
        333,
    ),
    (
        "init_declarator -> declarator",
        "init_declarator",
        1,
        "p_init_declarator",
        "parser.py",
        338,
    ),
    (
        "init_declarator -> declarator ASSIGN initializer",
        "init_declarator",
        3,
        "p_init_declarator",
        "parser.py",
        339,
    ),
    (
        "init_declarator_list -> init_declarator",
        "init_declarator_list",
        1,
        "p_init_declarator_list",
        "parser.py",
        344,
    ),
    (
        "init_declarator_list -> init_declarator_list COMMA init_declarator",
        "init_declarator_list",
        3,
        "p_init_declarator_list",
        "parser.py",
        345,
    ),
    (
        "initializer -> assignment_expression",
        "initializer",
        1,
        "p_initializer",
        "parser.py",
        350,
    ),
    (
        "initializer -> LBRACE initializer_list RBRACE",
        "initializer",
        3,
        "p_initializer",
        "parser.py",
        351,
    ),
    (
        "initializer -> LBRACE initializer_list COMMA RBRACE",
        "initializer",
        4,
        "p_initializer",
        "parser.py",
        352,
    ),
    (
        "initializer_list -> initializer",
        "initializer_list",
        1,
        "p_initializer_list",
        "parser.py",
        357,
    ),
    (
        "initializer_list -> initializer_list COMMA initializer",
        "initializer_list",
        3,
        "p_initializer_list",
        "parser.py",
        358,
    ),
    (
        "compound_statement -> LBRACE declaration_list_opt statement_list_opt RBRACE",
        "compound_statement",
        4,
        "p_compound_statement",
        "parser.py",
        367,
    ),
    (
        "statement -> expression_statement",
        "statement",
        1,
        "p_statement",
        "parser.py",
        373,
    ),
    (
        "statement -> compound_statement",
        "statement",
        1,
        "p_statement",
        "parser.py",
        374,
    ),
    (
        "statement -> selection_statement",
        "statement",
        1,
        "p_statement",
        "parser.py",
        375,
    ),
    (
        "statement -> iteration_statement",
        "statement",
        1,
        "p_statement",
        "parser.py",
        376,
    ),
    ("statement -> jump_statement", "statement", 1, "p_statement", "parser.py", 377),
    ("statement -> assert_statement", "statement", 1, "p_statement", "parser.py", 378),
    ("statement -> print_statement", "statement", 1, "p_statement", "parser.py", 379),
    ("statement -> read_statement", "statement", 1, "p_statement", "parser.py", 380),
    (
        "expression_statement -> expression_opt SEMI",
        "expression_statement",
        2,
        "p_expression_statement",
        "parser.py",
        386,
    ),
    (
        "selection_statement -> IF LPAREN expression RPAREN statement",
        "selection_statement",
        5,
        "p_selection_statement",
        "parser.py",
        391,
    ),
    (
        "selection_statement -> IF LPAREN expression RPAREN statement ELSE statement",
        "selection_statement",
        7,
        "p_selection_statement",
        "parser.py",
        392,
    ),
    (
        "iteration_statement -> WHILE LPAREN expression RPAREN statement",
        "iteration_statement",
        5,
        "p_iteration_statement",
        "parser.py",
        401,
    ),
    (
        "iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement",
        "iteration_statement",
        9,
        "p_iteration_statement",
        "parser.py",
        402,
    ),
    (
        "iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement",
        "iteration_statement",
        8,
        "p_iteration_statement",
        "parser.py",
        403,
    ),
    (
        "jump_statement -> BREAK SEMI",
        "jump_statement",
        2,
        "p_jump_statement_1",
        "parser.py",
        414,
    ),
    (
        "jump_statement -> RETURN expression_opt SEMI",
        "jump_statement",
        3,
        "p_jump_statement_2",
        "parser.py",
        420,
    ),
    (
        "assert_statement -> ASSERT expr SEMI",
        "assert_statement",
        3,
        "p_assert_statement",
        "parser.py",
        428,
    ),
    (
        "print_statement -> PRINT LPAREN expression_opt RPAREN SEMI",
        "print_statement",
        5,
        "p_print_statement",
        "parser.py",
        432,
    ),
    (
        "read_statement -> READ LPAREN argument_expression RPAREN SEMI",
        "read_statement",
        5,
        "p_read_statement",
        "parser.py",
        437,
    ),
    (
        "statement_list -> statement_list statement",
        "statement_list",
        2,
        "p_statement_list",
        "parser.py",
        441,
    ),
    (
        "statement_list -> statement",
        "statement_list",
        1,
        "p_statement_list",
        "parser.py",
        442,
    ),
    (
        "statement_list_opt -> statement_list",
        "statement_list_opt",
        1,
        "p_statement_list_opt",
        "parser.py",
        450,
    ),
    (
        "statement_list_opt -> empty",
        "statement_list_opt",
        1,
        "p_statement_list_opt",
        "parser.py",
        451,
    ),
]
