Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDRESS
    CCOMMENT
    CCONST
    CPPCOMMENT
    ERROR
    UNMATCHEDQUOTE
    UNTERMCOMMENT

Grammar

Rule 0     S' -> program
Rule 1     empty -> <empty>
Rule 2     program -> global_declaration_list
Rule 3     global_declaration_list -> global_declaration
Rule 4     global_declaration_list -> global_declaration_list global_declaration
Rule 5     global_declaration -> function_definition
Rule 6     global_declaration -> declaration
Rule 7     function_definition -> type_specifier_opt declarator declaration_list_opt compound_statement
Rule 8     type_specifier -> VOID
Rule 9     type_specifier -> CHAR
Rule 10    type_specifier -> INT
Rule 11    type_specifier -> FLOAT
Rule 12    type_specifier_opt -> type_specifier
Rule 13    type_specifier_opt -> empty
Rule 14    declarator -> pointer direct_declarator
Rule 15    declarator -> direct_declarator
Rule 16    pointer -> TIMES pointer_opt
Rule 17    pointer_opt -> pointer
Rule 18    pointer_opt -> empty
Rule 19    direct_declarator -> ID
Rule 20    direct_declarator -> LPAREN declarator RPAREN
Rule 21    direct_declarator -> direct_declarator LBRACE constant_exp_opt RBRACE
Rule 22    direct_declarator -> direct_declarator LPAREN parameter_list RPAREN
Rule 23    direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN
Rule 24    constant_expression -> expr
Rule 25    constant_exp_opt -> constant_expression
Rule 26    constant_exp_opt -> empty
Rule 27    identifier_list -> identifier_list ID
Rule 28    identifier_list -> ID
Rule 29    identifier_list_opt -> identifier_list
Rule 30    identifier_list_opt -> empty
Rule 31    expr -> cast_expression
Rule 32    expr -> expr PLUS expr
Rule 33    expr -> expr MINUS expr
Rule 34    expr -> expr TIMES expr
Rule 35    expr -> expr DIVIDE expr
Rule 36    expr -> expr EQUALS expr
Rule 37    expr -> expr MOD expr
Rule 38    expr -> expr GT expr
Rule 39    expr -> expr GET expr
Rule 40    expr -> expr LT expr
Rule 41    expr -> expr LET expr
Rule 42    expr -> expr DIFF expr
Rule 43    expr -> expr AND expr
Rule 44    expr -> expr OR expr
Rule 45    cast_expression -> unary_expression
Rule 46    cast_expression -> LPAREN type_specifier RPAREN cast_expression
Rule 47    unary_expression -> postfix_expression
Rule 48    unary_expression -> PP unary_expression
Rule 49    unary_expression -> MM unary_expression
Rule 50    unary_expression -> unary_operator cast_expression
Rule 51    postfix_expression -> primary_expression
Rule 52    postfix_expression -> postfix_expression LBRACE expression RBRACE
Rule 53    postfix_expression -> postfix_expression LBRACE RBRACE
Rule 54    postfix_expression -> postfix_expression LPAREN argument_expression_opt RPAREN
Rule 55    postfix_expression -> postfix_expression PP
Rule 56    postfix_expression -> postfix_expression MM
Rule 57    primary_expression -> ID
Rule 58    primary_expression -> constant
Rule 59    primary_expression -> STRING_LITERAL
Rule 60    primary_expression -> LPAREN expression RPAREN
Rule 61    constant -> ICONST
Rule 62    constant -> FCONST
Rule 63    expression -> assignment_expression
Rule 64    expression -> expression COMMA assignment_expression
Rule 65    expression_opt -> expression
Rule 66    expression_opt -> empty
Rule 67    assignment_expression -> expr
Rule 68    assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 69    argument_expression -> assignment_expression
Rule 70    argument_expression -> argument_expression COMMA assignment_expression
Rule 71    assignment_operator -> ASSIGN
Rule 72    assignment_operator -> TASSIGN
Rule 73    assignment_operator -> DASSIGN
Rule 74    assignment_operator -> MODASSIGN
Rule 75    assignment_operator -> PASSIGN
Rule 76    assignment_operator -> MINASSIGN
Rule 77    unary_operator -> AND
Rule 78    unary_operator -> TIMES
Rule 79    unary_operator -> PLUS
Rule 80    unary_operator -> MINUS
Rule 81    unary_operator -> NOT
Rule 82    parameter_list -> parameter_declaration
Rule 83    parameter_list -> parameter_list COMMA parameter_declaration
Rule 84    parameter_declaration -> type_specifier declarator
Rule 85    declaration -> type_specifier init_declarator_list_opt SEMI
Rule 86    declaration_list -> declaration
Rule 87    declaration_list -> declaration_list declaration
Rule 88    declaration_list_opt -> declaration_list
Rule 89    declaration_list_opt -> empty
Rule 90    init_declarator -> declarator
Rule 91    init_declarator -> declarator ASSIGN initializer
Rule 92    init_declarator_list -> init_declarator
Rule 93    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 94    init_declarator_list_opt -> init_declarator_list
Rule 95    init_declarator_list_opt -> empty
Rule 96    initializer -> assignment_expression
Rule 97    initializer -> LBRACK initializer_list RBRACK
Rule 98    initializer -> LBRACK initializer_list COMMA RBRACK
Rule 99    initializer_list -> initializer
Rule 100   initializer_list -> initializer_list COMMA initializer
Rule 101   compound_statement -> LBRACK declaration_list_opt statement_list_opt RBRACK
Rule 102   statement -> expression_statement
Rule 103   statement -> compound_statement
Rule 104   statement -> selection_statement
Rule 105   statement -> iteration_statement
Rule 106   statement -> jump_statement
Rule 107   statement -> assert_statement
Rule 108   statement -> print_statement
Rule 109   statement -> read_statement
Rule 110   expression_statement -> expression_opt SEMI
Rule 111   selection_statement -> IF LPAREN expression RPAREN statement
Rule 112   selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 113   iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 114   iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
Rule 115   iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
Rule 116   jump_statement -> BREAK SEMI
Rule 117   jump_statement -> RETURN expression_opt SEMI
Rule 118   assert_statement -> ASSERT expr SEMI
Rule 119   print_statement -> PRINT LPAREN expr RPAREN SEMI
Rule 120   read_statement -> READ LPAREN argument_expression RPAREN SEMI
Rule 121   statement_list -> statement_list statement
Rule 122   statement_list -> statement
Rule 123   statement_list_opt -> statement_list
Rule 124   statement_list_opt -> empty
Rule 125   statement -> ID ASSIGN expr
Rule 126   expr -> LPAREN expr RPAREN

Terminals, with rules where they appear

ADDRESS              : 
AND                  : 43 77
ASSERT               : 118
ASSIGN               : 71 91 125
BREAK                : 116
CCOMMENT             : 
CCONST               : 
CHAR                 : 9
COMMA                : 64 70 83 93 98 100
CPPCOMMENT           : 
DASSIGN              : 73
DIFF                 : 42
DIVIDE               : 35
ELSE                 : 112
EQUALS               : 36
ERROR                : 
FCONST               : 62
FLOAT                : 11
FOR                  : 114 115
GET                  : 39
GT                   : 38
ICONST               : 61
ID                   : 19 27 28 57 125
IF                   : 111 112
INT                  : 10
LBRACE               : 21 52 53
LBRACK               : 97 98 101
LET                  : 41
LPAREN               : 20 22 23 46 54 60 111 112 113 114 115 119 120 126
LT                   : 40
MINASSIGN            : 76
MINUS                : 33 80
MM                   : 49 56
MOD                  : 37
MODASSIGN            : 74
NOT                  : 81
OR                   : 44
PASSIGN              : 75
PLUS                 : 32 79
PP                   : 48 55
PRINT                : 119
RBRACE               : 21 52 53
RBRACK               : 97 98 101
READ                 : 120
RETURN               : 117
RPAREN               : 20 22 23 46 54 60 111 112 113 114 115 119 120 126
SEMI                 : 85 110 114 114 115 116 117 118 119 120
STRING_LITERAL       : 59
TASSIGN              : 72
TIMES                : 16 34 78
UNMATCHEDQUOTE       : 
UNTERMCOMMENT        : 
VOID                 : 8
WHILE                : 113
error                : 

Nonterminals, with rules where they appear

argument_expression  : 70 120
argument_expression_opt : 54
assert_statement     : 107
assignment_expression : 63 64 68 69 70 96
assignment_operator  : 68
cast_expression      : 31 46 50
compound_statement   : 7 103
constant             : 58
constant_exp_opt     : 21
constant_expression  : 25
declaration          : 6 86 87 115
declaration_list     : 87 88
declaration_list_opt : 7 101
declarator           : 7 20 84 90 91
direct_declarator    : 14 15 21 22 23
empty                : 13 18 26 30 66 89 95 124
expr                 : 24 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 67 118 119 125 126
expression           : 52 60 64 65 111 112 113
expression_opt       : 110 114 114 114 115 115 117
expression_statement : 102
function_definition  : 5
global_declaration   : 3 4
global_declaration_list : 2 4
identifier_list      : 27 29
identifier_list_opt  : 23
init_declarator      : 92 93
init_declarator_list : 93 94
init_declarator_list_opt : 85
initializer          : 91 99 100
initializer_list     : 97 98 100
iteration_statement  : 105
jump_statement       : 106
parameter_declaration : 82 83
parameter_list       : 22 83
pointer              : 14 17
pointer_opt          : 16
postfix_expression   : 47 52 53 54 55 56
primary_expression   : 51
print_statement      : 108
program              : 0
read_statement       : 109
selection_statement  : 104
statement            : 111 112 112 113 114 115 121 122
statement_list       : 121 123
statement_list_opt   : 101
type_specifier       : 12 46 84 85
type_specifier_opt   : 7
unary_expression     : 45 48 49 68
unary_operator       : 50

